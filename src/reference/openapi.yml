openapi: 3.1.0
info:
  title: UnguessApi
  version: '1.0'
  description: An API to get all data for your bugfinding and ux research needs!
  contact:
    name: Developers
    email: it@unguess.io
servers:
  - url: 'https://api.unguess.io'
paths:
  /:
    get:
      summary: Get API description
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-root
      description: Get all routes available for this apis
    parameters: []
  /authenticate:
    post:
      description: A request to login with your username and password
      summary: Authenticate to the API
      operationId: post-authenticate
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
            examples:
              example:
                value:
                  username: Elon71
                  password: my-strong-password
        description: A JSON containing username and password
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/me:
    get:
      summary: Get user data
      tags:
        - User
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      operationId: get-users-me
      security:
        - JWT: []
  /workspaces:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
      operationId: get-workspaces
      parameters: []
      security:
        - JWT: []
  '/workspaces/{wid}':
    parameters:
      - $ref: '#/components/parameters/wid'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      operationId: get-workspace
      parameters: []
      security:
        - JWT: []
  '/workspaces/{wid}/campaigns':
    parameters:
      - $ref: '#/components/parameters/wid'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    campaigns:
                      - id: 0
                        start_date: string
                        end_date: string
                        close_date: string
                        title: string
                        customer_title: string
                        description: string
                        status_id: 0
                        is_public: 0
                        campaign_type_id: 0
                        campaign_type_name: string
                        test_type_name: string
                        project_id: 0
                        project_name: string
                    page:
                      limit: 0
                      start: 0
                      size: 0
                      totalSize: 0
                properties:
                  items:
                    type: array
                    uniqueItems: false
                    items:
                      $ref: '#/components/schemas/Campaign'
                  total:
                    type: integer
                  start:
                    type: integer
                  size:
                    type: integer
                  limit:
                    type: integer
                required:
                  - items
                  - total
                  - start
                  - size
                  - limit
              examples:
                example-1:
                  value:
                    items:
                      - id: 0
                        start_date: string
                        end_date: string
                        close_date: string
                        title: string
                        customer_title: string
                        description: string
                        status_id: 0
                        is_public: 0
                        campaign_type_id: 0
                        campaign_type_name: string
                        test_type_name: string
                        project_id: 0
                        project_name: string
                    total: 0
                    start: 0
                    size: 0
                    limit: 0
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-workspace-campaigns
      security:
        - JWT: []
      description: ''
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/orderBy'
  '/workspaces/{wid}/projects':
    parameters:
      - $ref: '#/components/parameters/wid'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
      operationId: get-workspace-projects
      security:
        - JWT: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/orderBy'
  '/workspaces/{wid}/projects/{pid}':
    parameters:
      - $ref: '#/components/parameters/wid'
      - $ref: '#/components/parameters/pid'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      operationId: get-workspace-project
      security:
        - JWT: []
  '/workspaces/{wid}/projects/{pid}/campaigns':
    parameters:
      - $ref: '#/components/parameters/wid'
      - $ref: '#/components/parameters/pid'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
      operationId: get-workspace-project-campaigns
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/orderBy'
      security:
        - JWT: []
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        example-1:
          value:
            username: string
            name: string
            surname: string
            email: user@example.com
            image: 'http://example.com'
            id: 0
            wp_user_id: 0
            role: string
            is_verified: true
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        role:
          type: string
        name:
          type: string
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
        profile_id:
          type: integer
        tryber_wp_user_id:
          type: integer
        picture:
          type: string
      required:
        - id
        - email
        - role
        - name
        - workspaces
    Workspace:
      title: Workspace
      type: object
      properties:
        id:
          type: integer
        company:
          type: string
        tokens:
          type: number
        logo:
          type: string
        csm:
          oneOf:
            - $ref: '#/components/schemas/User'
      required:
        - id
        - company
        - tokens
        - csm
      x-examples:
        - id: 0
          company: string
          tokens: 0
          logo: string
          csm:
            email: user@example.com
            role: string
            name: Teomondo Scrofalo
            workspaces: []
            picture: 'https://pbs.twimg.com/media/Ccp6RXFWIAAQQ2V.jpg'
    Campaign:
      title: Campaign
      type: object
      properties:
        id:
          type: integer
        start_date:
          type: string
        end_date:
          type: string
        close_date:
          type: string
        title:
          type: string
        customer_title:
          type: string
        description:
          type: string
        status_id:
          type: number
        is_public:
          type: number
        campaign_type_id:
          type: integer
        campaign_type_name:
          type: string
        test_type_name:
          type: string
        project_id:
          type: integer
        project_name:
          type: string
      required:
        - id
        - start_date
        - end_date
        - close_date
        - title
        - customer_title
        - description
        - status_id
        - is_public
        - campaign_type_id
        - campaign_type_name
        - test_type_name
        - project_id
        - project_name
    Project:
      title: Project
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        campaigns_count:
          type: integer
      required:
        - id
        - name
        - campaigns_count
    Error:
      title: Error
      type: object
      properties:
        message:
          type: string
        code:
          type: number
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      description: ''
  responses:
    Error:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    wid:
      name: wid
      in: path
      required: true
      schema:
        type: number
      description: 'Workspace (company, customer) id'
    pid:
      name: pid
      in: path
      required: true
      schema:
        type: number
      description: Project id
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: number
      description: Limit pagination parameter
    start:
      name: start
      in: query
      required: false
      schema:
        type: number
      description: Start pagination parameter
    order:
      name: order
      in: query
      required: false
      schema:
        type: string
      description: 'Order value (ASC, DESC)'
    orderBy:
      name: orderBy
      in: query
      required: false
      schema:
        type: string
      description: Order by accepted field
tags:
  - name: Authentication
  - name: Campaign
  - name: Customer
  - name: Projects
  - name: Task
  - name: User
  - name: Admin
  - name: Devices
